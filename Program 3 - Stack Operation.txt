#include<stdio.h>
#include<stdlib.h>
#define max_size 5
int stack[max_size], top=-1;
void push();
void pop();
void display();
void pali();
int main()
{
  int choice;
  while(1)
  {
    printf("\n\n-----STACK OPERATIONS-----\n");
    printf("1.Push\n");
    printf("2.Pop\n");
    printf("3.Palindrome\n");
    printf("4.Display\n");
    printf("5.Exit\n");
    printf("-------------------");
    printf("\nEnter your choice:\t");
    scanf("%d",&choice);
    switch(choice)
    {
      case 1:push();
             break;
      case 2:pop();
             break;
      case 3:pali();
             break;
      case 4:display();
             break;
      case 5:exit(0);
             break;
      default:printf("\nInvalid choice:\n");
             break;
    }
  }
  return 0;
}
void push()
{
  int item, n;
  if(top==(max_size-1))
  {
    printf("\nStack overflow\n"); 
  }
  else
  {
    printf("\nEnter the element to be inserted:\t");
    scanf("%d",&item);
    top= top+1;
    stack[top]=item;
  }  
}
void display()
{
  int i;
  if(top==-1)
  {
    printf("\nStack is empty\n");
  }
  else
  {
    printf("\The stack elements are:\n");
    for(i=top;i>=0;i--)
    {
      printf("%d\t",stack[i]);
    }
  }
}
void pop()
{
  int item;
  if(top==-1)
  {
    printf("\nStack underflow");
  }
  else 
  {
    item=stack[top];
    top=top-1;
    printf("\nThe popped element is: %d",item);        
  }
}
void pali()
{
  int num[10],i=0,k,flag=1;
  k=top;
  while (k!=-1)
  {
    num[i++]=stack[k--];
  }
  for(i=0;i<=top;i++)
  {
    if(num[i]==stack[i])
          continue;
    else
          flag=0;      
  }
  if(top!=-1)
  {
    if(flag == 1)
       printf("\nIt is palindrome number\n");
    else
       printf("\nIt is not a palindrome number\n");   
  }
  else
        printf("Stack is empty");
}